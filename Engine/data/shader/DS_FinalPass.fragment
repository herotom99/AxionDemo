#version 420 core

out vec4 out_color;

uniform vec2 uGBufferSize;

uniform sampler2D uTexture;

uniform float weight[5] = float[] (0.227027, 0.1945946, 0.1216216, 0.054054, 0.016216);

vec2 CalcTexCoord()
{
	return gl_FragCoord.xy / uGBufferSize.xy;
}

void main()
{	
	vec2 TexCoord = CalcTexCoord();

	vec2 tex_offset = 1.0 / textureSize(uTexture, 0); // gets size of single texel
    vec3 result = texture(uTexture, TexCoord).rgb * weight[0]; // current fragment's contribution
   
	for(int i = 1; i < 5; ++i)
    {
        result += texture(uTexture, TexCoord + vec2(tex_offset.x * i, 0.0)).rgb * weight[i];
        result += texture(uTexture, TexCoord - vec2(tex_offset.x * i, 0.0)).rgb * weight[i];
    }
 
    for(int i = 1; i < 5; ++i)
    {
        result += texture(uTexture, TexCoord + vec2(0.0, tex_offset.y * i)).rgb * weight[i];
        result += texture(uTexture, TexCoord - vec2(0.0, tex_offset.y * i)).rgb * weight[i];
    }   

	result *= 2.0f;
    //out_color = vec4(result, 1.0f);
	out_color = texture(uTexture, TexCoord).rgba;
}